{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontconde\\\\src\\\\pages\\\\FeedPage\\\\FeedPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedPage = () => {\n  _s();\n  const [content, setContent] = useState('');\n  const [postImage, setPostImage] = useState(null);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    getPosts();\n  }, []);\n  const getPosts = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('https://redesocialsenac.azurewebsites.net/posts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts(response.data);\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        console.error('Token de autenticação inválido');\n        // Redirecione para a página de login ou faça alguma ação de tratamento de erro\n      } else {\n        console.error('Erro ao obter os posts:', error);\n      }\n    }\n  };\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('content', content);\n    formData.append('postImage', postImage);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('https://redesocialsenac.azurewebsites.net/posts', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Atualiza a lista de posts após o envio bem-sucedido\n      getPosts();\n\n      // Limpa o formulário\n      setContent('');\n      setPostImage(null);\n    } catch (error) {\n      console.error('Erro ao criar o post:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Erro',\n        text: error.response.data\n      });\n    }\n  };\n  const getBlobImage = async blobUrl => {\n    try {\n      const response = await axios.get(blobUrl, {\n        responseType: 'arraybuffer'\n      });\n      const imageBuffer = Buffer.from(response.data, 'binary');\n      const imageUrl = URL.createObjectURL(new Blob([imageBuffer]));\n      return imageUrl;\n    } catch (error) {\n      console.error('Erro ao obter a imagem do Blob:', error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const fetchImages = async () => {\n      const promises = posts.map(async post => {\n        const imageUrl = await getBlobImage(`https://redesocialsenac.blob.core.windows.net/posts/${post.image_url}`);\n        return {\n          ...post,\n          imageUrl\n        };\n      });\n      const updatedPosts = await Promise.all(promises);\n      setPosts(updatedPosts);\n    };\n    fetchImages();\n  }, [posts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Conte\\xFAdo:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Imagem:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setPostImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.imageUrl,\n          alt: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedPage, \"RYWNMX0VNhNys6n5Kaw5CxqBH4w=\");\n_c = FeedPage;\nexport default FeedPage;\nvar _c;\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Swal","jsxDEV","_jsxDEV","FeedPage","_s","content","setContent","postImage","setPostImage","posts","setPosts","getPosts","token","localStorage","getItem","response","get","headers","Authorization","data","error","status","console","handlePostSubmit","e","preventDefault","formData","FormData","append","post","fire","icon","title","text","getBlobImage","blobUrl","responseType","imageBuffer","Buffer","from","imageUrl","URL","createObjectURL","Blob","fetchImages","promises","map","image_url","updatedPosts","Promise","all","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","type","files","username","src","alt","id","_c","$RefreshReg$"],"sources":["C:/frontconde/src/pages/FeedPage/FeedPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst FeedPage = () => {\r\n  const [content, setContent] = useState('');\r\n  const [postImage, setPostImage] = useState(null);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  const getPosts = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get('https://redesocialsenac.azurewebsites.net/posts', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      setPosts(response.data);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 401) {\r\n        console.error('Token de autenticação inválido');\r\n        // Redirecione para a página de login ou faça alguma ação de tratamento de erro\r\n      } else {\r\n        console.error('Erro ao obter os posts:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePostSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('content', content);\r\n    formData.append('postImage', postImage);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post('https://redesocialsenac.azurewebsites.net/posts', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      // Atualiza a lista de posts após o envio bem-sucedido\r\n      getPosts();\r\n\r\n      // Limpa o formulário\r\n      setContent('');\r\n      setPostImage(null);\r\n    } catch (error) {\r\n      console.error('Erro ao criar o post:', error);\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Erro',\r\n        text: error.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getBlobImage = async (blobUrl) => {\r\n    try {\r\n      const response = await axios.get(blobUrl, {\r\n        responseType: 'arraybuffer',\r\n      });\r\n\r\n      const imageBuffer = Buffer.from(response.data, 'binary');\r\n      const imageUrl = URL.createObjectURL(new Blob([imageBuffer]));\r\n      return imageUrl;\r\n    } catch (error) {\r\n      console.error('Erro ao obter a imagem do Blob:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      const promises = posts.map(async (post) => {\r\n        const imageUrl = await getBlobImage(\r\n          `https://redesocialsenac.blob.core.windows.net/posts/${post.image_url}`\r\n        );\r\n        return {\r\n          ...post,\r\n          imageUrl,\r\n        };\r\n      });\r\n\r\n      const updatedPosts = await Promise.all(promises);\r\n      setPosts(updatedPosts);\r\n    };\r\n\r\n    fetchImages();\r\n  }, [posts]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Feed</h1>\r\n      <form onSubmit={handlePostSubmit}>\r\n        <label>\r\n          Conteúdo:\r\n          <textarea value={content} onChange={(e) => setContent(e.target.value)}></textarea>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Imagem:\r\n          <input type=\"file\" onChange={(e) => setPostImage(e.target.files[0])} />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n\r\n      <h2>Posts</h2>\r\n      {posts.map((post) => (\r\n        <div key={post.id}>\r\n          <div>\r\n            <h3>{post.username}</h3>\r\n            {post.imageUrl && <img src={post.imageUrl} alt=\"Post\" />}\r\n            <p>{post.content}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACda,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,iDAAiD,EAAE;QAClFC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASN,KAAM;QACjC;MACF,CAAC,CAAC;MAEFF,QAAQ,CAACK,QAAQ,CAACI,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QACnDC,OAAO,CAACF,KAAK,CAAC,gCAAgC,CAAC;QAC/C;MACF,CAAC,MAAM;QACLE,OAAO,CAACF,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEvB,OAAO,CAAC;IACnCqB,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAErB,SAAS,CAAC;IAEvC,IAAI;MACF,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAAC8B,IAAI,CAAC,iDAAiD,EAAEH,QAAQ,EAAE;QAC7FT,OAAO,EAAE;UACP,cAAc,EAAE,qBAAqB;UACrCC,aAAa,EAAG,UAASN,KAAM;QACjC;MACF,CAAC,CAAC;;MAEF;MACAD,QAAQ,CAAC,CAAC;;MAEV;MACAL,UAAU,CAAC,EAAE,CAAC;MACdE,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdE,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CpB,IAAI,CAAC8B,IAAI,CAAC;QACRC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAEb,KAAK,CAACL,QAAQ,CAACI;MACvB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMe,YAAY,GAAG,MAAOC,OAAO,IAAK;IACtC,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAACmB,OAAO,EAAE;QACxCC,YAAY,EAAE;MAChB,CAAC,CAAC;MAEF,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACxB,QAAQ,CAACI,IAAI,EAAE,QAAQ,CAAC;MACxD,MAAMqB,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACN,WAAW,CAAC,CAAC,CAAC;MAC7D,OAAOG,QAAQ;IACjB,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdE,OAAO,CAACF,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,OAAO,IAAI;IACb;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd,MAAM8C,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAGpC,KAAK,CAACqC,GAAG,CAAC,MAAOjB,IAAI,IAAK;QACzC,MAAMW,QAAQ,GAAG,MAAMN,YAAY,CAChC,uDAAsDL,IAAI,CAACkB,SAAU,EACxE,CAAC;QACD,OAAO;UACL,GAAGlB,IAAI;UACPW;QACF,CAAC;MACH,CAAC,CAAC;MAEF,MAAMQ,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MAChDnC,QAAQ,CAACsC,YAAY,CAAC;IACxB,CAAC;IAEDJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACnC,KAAK,CAAC,CAAC;EAEX,oBACEP,OAAA;IAAAiD,QAAA,gBACEjD,OAAA;MAAAiD,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbrD,OAAA;MAAMsD,QAAQ,EAAEjC,gBAAiB;MAAA4B,QAAA,gBAC/BjD,OAAA;QAAAiD,QAAA,GAAO,cAEL,eAAAjD,OAAA;UAAUuD,KAAK,EAAEpD,OAAQ;UAACqD,QAAQ,EAAGlC,CAAC,IAAKlB,UAAU,CAACkB,CAAC,CAACmC,MAAM,CAACF,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,eACRrD,OAAA;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNrD,OAAA;QAAAiD,QAAA,GAAO,SAEL,eAAAjD,OAAA;UAAO0D,IAAI,EAAC,MAAM;UAACF,QAAQ,EAAGlC,CAAC,IAAKhB,YAAY,CAACgB,CAAC,CAACmC,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eACRrD,OAAA;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNrD,OAAA;QAAQ0D,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eAEPrD,OAAA;MAAAiD,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACb9C,KAAK,CAACqC,GAAG,CAAEjB,IAAI,iBACd3B,OAAA;MAAAiD,QAAA,eACEjD,OAAA;QAAAiD,QAAA,gBACEjD,OAAA;UAAAiD,QAAA,EAAKtB,IAAI,CAACiC;QAAQ;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACvB1B,IAAI,CAACW,QAAQ,iBAAItC,OAAA;UAAK6D,GAAG,EAAElC,IAAI,CAACW,QAAS;UAACwB,GAAG,EAAC;QAAM;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxDrD,OAAA;UAAAiD,QAAA,EAAItB,IAAI,CAACxB;QAAO;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC,GALE1B,IAAI,CAACoC,EAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnD,EAAA,CA5HID,QAAQ;AAAA+D,EAAA,GAAR/D,QAAQ;AA8Hd,eAAeA,QAAQ;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}