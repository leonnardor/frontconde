{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontconde\\\\src\\\\pages\\\\FeedPage\\\\FeedPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n// css\nimport './FeedPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedPage = () => {\n  _s();\n  const [content, setContent] = useState('');\n  const [postImage, setPostImage] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [isPostsLoaded, setIsPostsLoaded] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      await getPosts();\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (isPostsLoaded) {\n      fetchImages();\n    }\n  }, [isPostsLoaded]);\n  const getUser = async userId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`https://redesocialsenac.azurewebsites.net/users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Erro ao obter informações do usuário:', error);\n    }\n  };\n  const getPosts = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('https://redesocialsenac.azurewebsites.net/posts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts(response.data);\n      setIsPostsLoaded(true);\n      console.log(response.data);\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        console.error('Token de autenticação inválido');\n        // Redirecione para a página de login ou faça alguma ação de tratamento de erro\n      } else {\n        console.error('Erro ao obter os posts:', error);\n      }\n    }\n  };\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('content', content);\n    formData.append('postImage', postImage);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('https://redesocialsenac.azurewebsites.net/posts', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Atualiza a lista de posts após o envio bem-sucedido\n      getPosts();\n\n      // Limpa o formulário\n      setContent('');\n      setPostImage(null);\n    } catch (error) {\n      console.error('Erro ao criar o post:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Erro',\n        text: error.response.data\n      });\n    }\n  };\n  const getBlobImage = imageUrl => {\n    return imageUrl;\n  };\n  const fetchImages = async () => {\n    try {\n      const updatedPosts = await Promise.all(posts.map(async post => {\n        const imageUrl = await getBlobImage(`https://storedesenac.blob.core.windows.net/cdnrede/${post.image_url}`);\n        const user = await getUser(post.user_id); // Get user information for the post\n        return {\n          ...post,\n          imageUrl,\n          user\n        };\n      }));\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Erro ao buscar as imagens:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Digite o conte\\xFAdo do post\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setPostImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Publicar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Postado por: \", post.user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.imageUrl,\n        alt: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedPage, \"2BoLNVLa7jhZ0FZn3LF+QbaoA5U=\");\n_c = FeedPage;\nexport default FeedPage;\nvar _c;\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Swal","jsxDEV","_jsxDEV","FeedPage","_s","content","setContent","postImage","setPostImage","posts","setPosts","isPostsLoaded","setIsPostsLoaded","fetchData","getPosts","fetchImages","getUser","userId","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","log","status","handlePostSubmit","e","preventDefault","formData","FormData","append","post","fire","icon","title","text","getBlobImage","imageUrl","updatedPosts","Promise","all","map","image_url","user","user_id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","type","files","username","src","alt","id","_c","$RefreshReg$"],"sources":["C:/frontconde/src/pages/FeedPage/FeedPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n// css\r\nimport './FeedPage.css';\r\n\r\nconst FeedPage = () => {\r\n  const [content, setContent] = useState('');\r\n  const [postImage, setPostImage] = useState(null);\r\n  const [posts, setPosts] = useState([]);\r\n  const [isPostsLoaded, setIsPostsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await getPosts();\r\n    };\r\n  \r\n    fetchData();\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (isPostsLoaded) {\r\n      fetchImages();\r\n    }\r\n  }, [isPostsLoaded]);\r\n\r\n  const getUser = async (userId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`https://redesocialsenac.azurewebsites.net/users/${userId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n  \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Erro ao obter informações do usuário:', error);\r\n    }\r\n  };\r\n\r\n  const getPosts = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get('https://redesocialsenac.azurewebsites.net/posts', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n  \r\n      setPosts(response.data);\r\n      setIsPostsLoaded(true);\r\n      console.log(response.data)\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 401) {\r\n        console.error('Token de autenticação inválido');\r\n        // Redirecione para a página de login ou faça alguma ação de tratamento de erro\r\n      } else {\r\n        console.error('Erro ao obter os posts:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  const handlePostSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('content', content);\r\n    formData.append('postImage', postImage);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post('https://redesocialsenac.azurewebsites.net/posts', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      // Atualiza a lista de posts após o envio bem-sucedido\r\n      getPosts();\r\n\r\n      // Limpa o formulário\r\n      setContent('');\r\n      setPostImage(null);\r\n    } catch (error) {\r\n      console.error('Erro ao criar o post:', error);\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Erro',\r\n        text: error.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getBlobImage = (imageUrl) => {\r\n    return imageUrl;\r\n  };\r\n  \r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const updatedPosts = await Promise.all(\r\n        posts.map(async (post) => {\r\n          const imageUrl = await getBlobImage(\r\n            `https://storedesenac.blob.core.windows.net/cdnrede/${post.image_url}`\r\n          );\r\n          const user = await getUser(post.user_id); // Get user information for the post\r\n          return { ...post, imageUrl, user };\r\n        })\r\n      );\r\n      setPosts(updatedPosts);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar as imagens:', error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Feed</h1>\r\n      <form onSubmit={handlePostSubmit}>\r\n        <textarea\r\n          placeholder=\"Digite o conteúdo do post\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        ></textarea>\r\n        <input type=\"file\" onChange={(e) => setPostImage(e.target.files[0])} />\r\n        <button type=\"submit\">Publicar</button>\r\n      </form>\r\n      {posts.map((post) => (\r\n        <div key={post.id}>\r\n          <h3>{post.content}</h3>\r\n          <p>Postado por: {post.user.username}</p>\r\n          <img src={post.imageUrl} alt=\"Post\" />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}